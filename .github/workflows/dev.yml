name: Check, test and deploy
on: push
jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      #- name: Add user
      #  run: sudo useradd linkmarks
      #- name: Check user
      #  run: cat /etc/passwd
       
      - name: Get repository code
        uses: actions/checkout@v4.2.2
       
      - name: Setup php
        uses: shivammathur/setup-php@2.34.1
        with:
          php-version: '8.4'

      - name: Setup Postgresql
        env:
          PGDATA: /usr/local/postgresql/data/
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update 
          sudo apt-get install -y postgresql-common 
          echo | sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh 
          sudo apt-get install -y postgresql-17
          sudo pg_createcluster -D ${{env.PGDATA}} 17 main -- --data-checksums
          sudo pg_ctlcluster 17 main start
          sudo pg_ctlcluster 17 main status
          #sudo /usr/lib/postgresql/17/bin/pg_checksums --enable -D ${{env.PGDATA}}
          psql -p 5433 -u postgres -c "CREATE USER homestead WITH CREATEDB PASSWORD 'secret'"
          
      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'
      - name: Install nodejs dependencies
        run: npm install
        working-directory: ./src

      
       #install DependencCREATE DATABASE
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
        working-directory: ./src

      #setup Laravel
      - name: Setup laravel
        env:
          #DB_HOST: 127.0.0.1
          DB_HOST: localhost
          DB_PORT: 5433
          #DB_USERNAME: linkmarks
          #DB_PASSWORD: password 
        run: |
          cp .env.example .env
          php artisan config:clear
          php artisan cache:clear
          php artisan key:generate
        working-directory: ./src
#
#      - name: Check PHP syntax errors
#        uses: overtrue/phplint@9.6.2      
#  
#      - name: Composer audit
#        run: composer audit
#
#      - name: Composer validate
#        run: composer validate --no-check-all --strict
#
#      - name: Run tests
#        run: run ./vendor/bin/phpunit --colors=always
#
#      - name: Run phpstan
#        run: ./vendor/bin/phpstan analyse
    
