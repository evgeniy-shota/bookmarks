name: Check, test and deploy
on: push
jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Get repository code
        uses: actions/checkout@v4.2.2

      - name: Test checkout
        run: cat .env.example
        working-directory: ./src 
        
      - name: Setup php
        uses: shivammathur/setup-php@2.34.1
        with:
          php-version: '8.4'

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'
      - name: Install nodejs dependencies
        run: npm install
        working-directory: ./src

      # install mariadb
      - name: Setup mariadb
        run: sudo apt-get install mariadb-server mariadb-client
      - name: Secure the Installation mariadb
        run: |
          sudo mysql -e "DELETE FROM mysql.user WHERE User=''"
          sudo mysql -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
          sudo mysql -e "DROP DATABASE IF EXISTS test"
          sudo mysql -e "FLUSH PRIVILEGES"
      - name: Setup db
        env:
          DB_DATABASE: homestead
          DB_USERNAME: homestead
          DB_PASSWORD: secret
        run: |
          sudo mysql -e "CREATE DATABASE ${{env.DB_DATABASE}}" -u${{env.DB_USERNAME}} -p${{env.DB_PASSWORD}} 
      
      # install DependencCREATE DATABASEie ${{env.DB_DATABASEs
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
        working-directory: ./src

      #setup Laravel
      - name: Setup laravel
        env:
          DB_HOST: localhost
        run: |
          cp .env.example .env
          php artisan config:clear
          php artisan cache:clear
          php artisan key:generate
        working-directory: ./src
#
#      - name: Check PHP syntax errors
#        uses: overtrue/phplint@9.6.2      
#  
#      - name: Composer audit
#        run: composer audit
#
#      - name: Composer validate
#        run: composer validate --no-check-all --strict
#
#      - name: Run tests
#        run: run ./vendor/bin/phpunit --colors=always
#
#      - name: Run phpstan
#        run: ./vendor/bin/phpstan analyse
    
